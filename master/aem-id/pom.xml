<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sharadtech</groupId>
		<artifactId>aem-id-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>aem-id</artifactId>
	<packaging>content-package</packaging>
	<name>AEM ID Package</name>
	<description>AEM ID Package</description>
	<properties>
		<site.short.name>sharadtech</site.short.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jcr.root.dir>${basedir}/src/main/content/jcr_root</jcr.root.dir>

		<id.nissan.src.dir>../master/deploy/nissan/common-assets</id.nissan.src.dir>
		<aem.nissan.etc.designs.path>/etc/designs/nissan</aem.nissan.etc.designs.path>
		<aem.nissan.etc.designs.dir>${jcr.root.dir}${aem.nissan.etc.designs.path}</aem.nissan.etc.designs.dir>
		<aem.nissan.etc.designs.buildId.dir>${aem.nissan.etc.designs.dir}/${mavenBuildVersion}-${buildId}</aem.nissan.etc.designs.buildId.dir>
		<aem.nissan.etc.designs.assets.dir>${aem.nissan.etc.designs.buildId.dir}/common-assets</aem.nissan.etc.designs.assets.dir>

        <id.infiniti.src.dir>../master/deploy/infiniti/common-assets</id.infiniti.src.dir>
		<aem.infiniti.etc.designs.path>/etc/designs/infiniti</aem.infiniti.etc.designs.path>
		<aem.infiniti.etc.designs.dir>${jcr.root.dir}${aem.infiniti.etc.designs.path}</aem.infiniti.etc.designs.dir>
		<aem.infiniti.etc.designs.buildId.dir>${aem.infiniti.etc.designs.dir}/${mavenBuildVersion}-${buildId}</aem.infiniti.etc.designs.buildId.dir>
		<aem.infiniti.etc.designs.assets.dir>${aem.infiniti.etc.designs.buildId.dir}/common-assets</aem.infiniti.etc.designs.assets.dir>

        <id.etc.designs.exclude.dir>img/tmp/**</id.etc.designs.exclude.dir>
        <id.etc.designs.carvisualizer.exclude.dir>img/**/static/carvisualizer/**</id.etc.designs.carvisualizer.exclude.dir>

		<metainf.dir>${basedir}/src/main/content/META-INF</metainf.dir>
		<filter.xml.file>${metainf.dir}/vault/filter.xml</filter.xml.file>
		<cq.package.name>${project.artifactId}</cq.package.name>
		<cq.package.version>${project.version}.build-${buildId}</cq.package.version>
		<bundle.install.root>/apps/${site.short.name}/install</bundle.install.root>
		<cq.package.group>${project.groupId}</cq.package.group>
		<bundle.namespace>${project.groupId}</bundle.namespace>
	</properties>

    <!-- <scm>
        <url>http://stash.lbi.co.uk/projects/HEL/repos/application</url>
        <connection>scm:git:https://stash.lbi.co.uk/scm/hel/application.git</connection>
        <developerConnection>scm:git:https://stash.lbi.co.uk/scm/hel/application.git</developerConnection>
        <tag>HEAD</tag>
    </scm> -->

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>cleanup</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${aem.nissan.etc.designs.dir}</directory>
									<excludes>
										<exclude>.content.xml</exclude>
									</excludes>
								</fileset>
                                <fileset>
									<directory>${aem.infiniti.etc.designs.dir}</directory>
									<excludes>
										<exclude>.content.xml</exclude>
									</excludes>
								</fileset>
                            </filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<configuration>
							<target name="building">
								<copy todir="${aem.nissan.etc.designs.assets.dir}">
									<fileset dir="${id.nissan.src.dir}">
										<include name="**" />
										<exclude name="${id.etc.designs.exclude.dir}" />
										<exclude name="${id.etc.designs.carvisualizer.exclude.dir}" />
									</fileset>
								</copy>
                                <copy todir="${aem.infiniti.etc.designs.assets.dir}">
									<fileset dir="${id.infiniti.src.dir}">
										<include name="**" />
										<exclude name="${id.etc.designs.exclude.dir}" />
										<exclude name="${id.etc.designs.carvisualizer.exclude.dir}" />
									</fileset>
								</copy>
                            </target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.day.jcr.vault</groupId>
				<artifactId>content-package-maven-plugin</artifactId>
				<version>0.0.23</version>
				<extensions>true</extensions>
				<configuration>
					<builtContentDirectory>${jcr.root.dir}</builtContentDirectory>
					<filterSource>${filter.xml.file}</filterSource>
					<verbose>true</verbose>
					<group>${cq.package.group}</group>
					<version>${cq.package.version}</version>
					<userId>${cq.user}</userId>
					<password>${cq.password}</password>
					<targetURL>${cq.http.protocol}://${cq.host}:${cq.port}/crx/packmgr/service.jsp</targetURL>
					<failOnError>true</failOnError>
					<failOnMissingEmbed>true</failOnMissingEmbed>
					<properties>
						<description>${project.description} [Revision: ${buildNumber}, Build Id: ${buildId}, Built by: ${user.name}]</description>
					</properties>
					<finalName>${cq.package.name}-${cq.package.version}</finalName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<shortRevisionLength>5</shortRevisionLength>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<!-- exclude .vlt control files and tests -->
			<resource>
				<directory>${jcr.root.dir}</directory>
				<excludes>
					<exclude>**/.vlt</exclude>
					<exclude>**/.vltignore</exclude>
					<exclude>**/.DS_Store</exclude>
					<exclude>**/.gitignore</exclude>
					<exclude>**/readme.txt</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${metainf.dir}</directory>
				<targetPath>../vault-work/META-INF</targetPath>
				<excludes>
					<exclude>**/.vlt</exclude>
					<exclude>**/.vltignore</exclude>
					<exclude>**/.DS_Store</exclude>
					<exclude>vault/nodetypes.cnd</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>bamboo</id>
			<build>
				<plugins>
					<!-- deploys a version with the build number to repository -->
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
                        <version>2.8.2</version>
						<configuration>
							<artifactId>${project.artifactId}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>build-${bambooBuildNumber}-${project.version}</version>
							<packaging>zip</packaging>
							<file>${project.build.directory}/${cq.package.name}-${cq.package.version}.zip</file>
							<url>${project.distributionManagement.snapshotRepository.url}</url>
							<repositoryId>helios-nexus-snapshots</repositoryId>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>deploy-file</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>autoInstallPackage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.day.jcr.vault</groupId>
						<artifactId>content-package-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install-content-package</id>
								<phase>install</phase>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
